import XCTest
@testable import geometrize

final class QuadraticBezierTests: XCTestCase {
    
    func testRasterize() throws {
        let q = QuadraticBezier(cx: 327.0, cy: 295.0, x1: 57.0, y1: 542.0, x2: 190.0, y2: 216.0)
        let scanlines = q.rasterize(xMin: 0, yMin: 0, xMax: 471, yMax: 590)

        let samplesStr = """
        Scanline(y: 542, x1: 57, x2: 57), Scanline(y: 541, x1: 58, x2: 58), Scanline(y: 540, x1: 59, x2: 59), Scanline(y: 539, x1: 60, x2: 60), Scanline(y: 538, x1: 61, x2: 61), Scanline(y: 537, x1: 62, x2: 62), Scanline(y: 536, x1: 63, x2: 63), Scanline(y: 535, x1: 64, x2: 64), Scanline(y: 534, x1: 65, x2: 65), Scanline(y: 533, x1: 66, x2: 66), Scanline(y: 532, x1: 67, x2: 67), Scanline(y: 531, x1: 68, x2: 68), Scanline(y: 530, x1: 69, x2: 69), Scanline(y: 529, x1: 70, x2: 70), Scanline(y: 528, x1: 71, x2: 71), Scanline(y: 527, x1: 72, x2: 72), Scanline(y: 526, x1: 73, x2: 73), Scanline(y: 525, x1: 74, x2: 74), Scanline(y: 524, x1: 75, x2: 75), Scanline(y: 523, x1: 76, x2: 76), Scanline(y: 522, x1: 77, x2: 77), Scanline(y: 521, x1: 78, x2: 78), Scanline(y: 520, x1: 79, x2: 79), Scanline(y: 519, x1: 80, x2: 80), Scanline(y: 518, x1: 81, x2: 81), Scanline(y: 517, x1: 82, x2: 82), Scanline(y: 516, x1: 83, x2: 83), Scanline(y: 515, x1: 84, x2: 84), Scanline(y: 514, x1: 85, x2: 85), Scanline(y: 513, x1: 86, x2: 86), Scanline(y: 512, x1: 87, x2: 87), Scanline(y: 511, x1: 88, x2: 88), Scanline(y: 510, x1: 89, x2: 89), Scanline(y: 509, x1: 90, x2: 90), Scanline(y: 508, x1: 91, x2: 91), Scanline(y: 507, x1: 92, x2: 92), Scanline(y: 506, x1: 93, x2: 93), Scanline(y: 505, x1: 94, x2: 94), Scanline(y: 505, x1: 95, x2: 95), Scanline(y: 504, x1: 96, x2: 96), Scanline(y: 503, x1: 97, x2: 97), Scanline(y: 502, x1: 98, x2: 98), Scanline(y: 501, x1: 99, x2: 99), Scanline(y: 500, x1: 100, x2: 100), Scanline(y: 499, x1: 101, x2: 101), Scanline(y: 498, x1: 102, x2: 102), Scanline(y: 497, x1: 103, x2: 103), Scanline(y: 496, x1: 104, x2: 104), Scanline(y: 495, x1: 105, x2: 105), Scanline(y: 494, x1: 106, x2: 106), Scanline(y: 493, x1: 107, x2: 107), Scanline(y: 492, x1: 108, x2: 108), Scanline(y: 491, x1: 109, x2: 109), Scanline(y: 490, x1: 110, x2: 110), Scanline(y: 489, x1: 111, x2: 111), Scanline(y: 488, x1: 112, x2: 112), Scanline(y: 487, x1: 113, x2: 113), Scanline(y: 486, x1: 114, x2: 114), Scanline(y: 485, x1: 115, x2: 115), Scanline(y: 484, x1: 116, x2: 116), Scanline(y: 483, x1: 117, x2: 117), Scanline(y: 482, x1: 117, x2: 117), Scanline(y: 481, x1: 118, x2: 118), Scanline(y: 480, x1: 119, x2: 119), Scanline(y: 479, x1: 120, x2: 120), Scanline(y: 478, x1: 121, x2: 121), Scanline(y: 477, x1: 122, x2: 122), Scanline(y: 476, x1: 123, x2: 123), Scanline(y: 475, x1: 124, x2: 124), Scanline(y: 474, x1: 125, x2: 125), Scanline(y: 473, x1: 126, x2: 126), Scanline(y: 472, x1: 127, x2: 127), Scanline(y: 471, x1: 128, x2: 128), Scanline(y: 470, x1: 129, x2: 129), Scanline(y: 469, x1: 130, x2: 130), Scanline(y: 468, x1: 131, x2: 131), Scanline(y: 467, x1: 132, x2: 132), Scanline(y: 466, x1: 133, x2: 133), Scanline(y: 465, x1: 133, x2: 133), Scanline(y: 464, x1: 134, x2: 134), Scanline(y: 463, x1: 135, x2: 135), Scanline(y: 462, x1: 136, x2: 136), Scanline(y: 461, x1: 137, x2: 137), Scanline(y: 460, x1: 138, x2: 138), Scanline(y: 459, x1: 139, x2: 139), Scanline(y: 458, x1: 140, x2: 140), Scanline(y: 457, x1: 141, x2: 141), Scanline(y: 456, x1: 142, x2: 142), Scanline(y: 455, x1: 143, x2: 143), Scanline(y: 454, x1: 143, x2: 143), Scanline(y: 453, x1: 144, x2: 144), Scanline(y: 452, x1: 145, x2: 145), Scanline(y: 451, x1: 146, x2: 146), Scanline(y: 450, x1: 147, x2: 147), Scanline(y: 449, x1: 148, x2: 148), Scanline(y: 448, x1: 149, x2: 149), Scanline(y: 447, x1: 150, x2: 150), Scanline(y: 446, x1: 151, x2: 151), Scanline(y: 445, x1: 152, x2: 152), Scanline(y: 444, x1: 152, x2: 152), Scanline(y: 443, x1: 153, x2: 153), Scanline(y: 442, x1: 154, x2: 154), Scanline(y: 441, x1: 155, x2: 155), Scanline(y: 440, x1: 156, x2: 156), Scanline(y: 439, x1: 157, x2: 157), Scanline(y: 438, x1: 158, x2: 158), Scanline(y: 437, x1: 159, x2: 159), Scanline(y: 436, x1: 160, x2: 160), Scanline(y: 435, x1: 161, x2: 161), Scanline(y: 434, x1: 161, x2: 161), Scanline(y: 433, x1: 162, x2: 162), Scanline(y: 432, x1: 163, x2: 163), Scanline(y: 431, x1: 164, x2: 164), Scanline(y: 430, x1: 165, x2: 165), Scanline(y: 429, x1: 166, x2: 166), Scanline(y: 428, x1: 167, x2: 167), Scanline(y: 427, x1: 168, x2: 168), Scanline(y: 426, x1: 168, x2: 168), Scanline(y: 425, x1: 169, x2: 169), Scanline(y: 424, x1: 170, x2: 170), Scanline(y: 423, x1: 171, x2: 171), Scanline(y: 422, x1: 171, x2: 171), Scanline(y: 421, x1: 172, x2: 172), Scanline(y: 420, x1: 173, x2: 173), Scanline(y: 419, x1: 174, x2: 174), Scanline(y: 418, x1: 174, x2: 174), Scanline(y: 417, x1: 175, x2: 175), Scanline(y: 416, x1: 176, x2: 176), Scanline(y: 415, x1: 177, x2: 177), Scanline(y: 414, x1: 177, x2: 177), Scanline(y: 413, x1: 178, x2: 178), Scanline(y: 412, x1: 179, x2: 179), Scanline(y: 411, x1: 180, x2: 180), Scanline(y: 410, x1: 180, x2: 180), Scanline(y: 409, x1: 181, x2: 181), Scanline(y: 408, x1: 182, x2: 182), Scanline(y: 407, x1: 183, x2: 183), Scanline(y: 406, x1: 183, x2: 183), Scanline(y: 405, x1: 184, x2: 184), Scanline(y: 404, x1: 185, x2: 185), Scanline(y: 403, x1: 186, x2: 186), Scanline(y: 402, x1: 186, x2: 186), Scanline(y: 401, x1: 187, x2: 187), Scanline(y: 400, x1: 188, x2: 188), Scanline(y: 399, x1: 189, x2: 189), Scanline(y: 398, x1: 189, x2: 189), Scanline(y: 397, x1: 190, x2: 190), Scanline(y: 396, x1: 191, x2: 191), Scanline(y: 395, x1: 192, x2: 192), Scanline(y: 394, x1: 192, x2: 192), Scanline(y: 393, x1: 193, x2: 193), Scanline(y: 392, x1: 194, x2: 194), Scanline(y: 391, x1: 195, x2: 195), Scanline(y: 390, x1: 195, x2: 195), Scanline(y: 389, x1: 196, x2: 196), Scanline(y: 388, x1: 197, x2: 197), Scanline(y: 387, x1: 197, x2: 197), Scanline(y: 386, x1: 198, x2: 198), Scanline(y: 385, x1: 198, x2: 198), Scanline(y: 384, x1: 199, x2: 199), Scanline(y: 383, x1: 200, x2: 200), Scanline(y: 382, x1: 200, x2: 200), Scanline(y: 381, x1: 201, x2: 201), Scanline(y: 380, x1: 201, x2: 201), Scanline(y: 379, x1: 202, x2: 202), Scanline(y: 378, x1: 203, x2: 203), Scanline(y: 377, x1: 203, x2: 203), Scanline(y: 376, x1: 204, x2: 204), Scanline(y: 375, x1: 205, x2: 205), Scanline(y: 374, x1: 205, x2: 205), Scanline(y: 373, x1: 206, x2: 206), Scanline(y: 372, x1: 206, x2: 206), Scanline(y: 371, x1: 207, x2: 207), Scanline(y: 370, x1: 208, x2: 208), Scanline(y: 369, x1: 208, x2: 208), Scanline(y: 368, x1: 209, x2: 209), Scanline(y: 367, x1: 209, x2: 209), Scanline(y: 366, x1: 210, x2: 210), Scanline(y: 365, x1: 210, x2: 210), Scanline(y: 364, x1: 211, x2: 211), Scanline(y: 363, x1: 211, x2: 211), Scanline(y: 362, x1: 212, x2: 212), Scanline(y: 361, x1: 213, x2: 213), Scanline(y: 360, x1: 213, x2: 213), Scanline(y: 359, x1: 214, x2: 214), Scanline(y: 358, x1: 214, x2: 214), Scanline(y: 357, x1: 215, x2: 215), Scanline(y: 356, x1: 215, x2: 215), Scanline(y: 355, x1: 216, x2: 216), Scanline(y: 354, x1: 216, x2: 216), Scanline(y: 353, x1: 217, x2: 217), Scanline(y: 352, x1: 217, x2: 217), Scanline(y: 351, x1: 218, x2: 218), Scanline(y: 350, x1: 218, x2: 218), Scanline(y: 349, x1: 219, x2: 219), Scanline(y: 348, x1: 219, x2: 219), Scanline(y: 347, x1: 220, x2: 220), Scanline(y: 346, x1: 220, x2: 220), Scanline(y: 345, x1: 221, x2: 221), Scanline(y: 344, x1: 221, x2: 221), Scanline(y: 343, x1: 222, x2: 222), Scanline(y: 342, x1: 222, x2: 222), Scanline(y: 341, x1: 223, x2: 223), Scanline(y: 340, x1: 223, x2: 223), Scanline(y: 339, x1: 224, x2: 224), Scanline(y: 338, x1: 224, x2: 224), Scanline(y: 337, x1: 225, x2: 225), Scanline(y: 336, x1: 225, x2: 225), Scanline(y: 335, x1: 226, x2: 226), Scanline(y: 334, x1: 226, x2: 226), Scanline(y: 333, x1: 226, x2: 226), Scanline(y: 332, x1: 227, x2: 227), Scanline(y: 331, x1: 227, x2: 227), Scanline(y: 330, x1: 227, x2: 227), Scanline(y: 329, x1: 227, x2: 227), Scanline(y: 328, x1: 228, x2: 228), Scanline(y: 327, x1: 228, x2: 228), Scanline(y: 326, x1: 228, x2: 228), Scanline(y: 325, x1: 229, x2: 229), Scanline(y: 324, x1: 229, x2: 229), Scanline(y: 323, x1: 229, x2: 229), Scanline(y: 322, x1: 230, x2: 230), Scanline(y: 321, x1: 230, x2: 230), Scanline(y: 320, x1: 230, x2: 230), Scanline(y: 319, x1: 231, x2: 231), Scanline(y: 318, x1: 231, x2: 231), Scanline(y: 317, x1: 231, x2: 231), Scanline(y: 316, x1: 231, x2: 231), Scanline(y: 315, x1: 232, x2: 232), Scanline(y: 314, x1: 232, x2: 232), Scanline(y: 313, x1: 232, x2: 232), Scanline(y: 312, x1: 232, x2: 232), Scanline(y: 311, x1: 233, x2: 233), Scanline(y: 310, x1: 233, x2: 233), Scanline(y: 309, x1: 233, x2: 233), Scanline(y: 308, x1: 233, x2: 233), Scanline(y: 307, x1: 234, x2: 234), Scanline(y: 306, x1: 234, x2: 234), Scanline(y: 305, x1: 234, x2: 234), Scanline(y: 304, x1: 234, x2: 234), Scanline(y: 303, x1: 234, x2: 234), Scanline(y: 302, x1: 235, x2: 235), Scanline(y: 301, x1: 235, x2: 235), Scanline(y: 300, x1: 235, x2: 235), Scanline(y: 299, x1: 235, x2: 235), Scanline(y: 298, x1: 235, x2: 235), Scanline(y: 297, x1: 235, x2: 235), Scanline(y: 296, x1: 235, x2: 235), Scanline(y: 295, x1: 235, x2: 235), Scanline(y: 294, x1: 236, x2: 236), Scanline(y: 293, x1: 236, x2: 236), Scanline(y: 292, x1: 236, x2: 236), Scanline(y: 291, x1: 236, x2: 236), Scanline(y: 290, x1: 236, x2: 236), Scanline(y: 289, x1: 236, x2: 236), Scanline(y: 288, x1: 236, x2: 236), Scanline(y: 287, x1: 236, x2: 236), Scanline(y: 286, x1: 236, x2: 236), Scanline(y: 285, x1: 236, x2: 236), Scanline(y: 284, x1: 235, x2: 235), Scanline(y: 283, x1: 235, x2: 235), Scanline(y: 282, x1: 235, x2: 235), Scanline(y: 281, x1: 235, x2: 235), Scanline(y: 280, x1: 235, x2: 235), Scanline(y: 279, x1: 235, x2: 235), Scanline(y: 278, x1: 235, x2: 235), Scanline(y: 277, x1: 235, x2: 235), Scanline(y: 276, x1: 235, x2: 235), Scanline(y: 275, x1: 235, x2: 235), Scanline(y: 274, x1: 234, x2: 234), Scanline(y: 273, x1: 234, x2: 234), Scanline(y: 272, x1: 234, x2: 234), Scanline(y: 271, x1: 234, x2: 234), Scanline(y: 270, x1: 234, x2: 234), Scanline(y: 269, x1: 234, x2: 234), Scanline(y: 268, x1: 233, x2: 233), Scanline(y: 267, x1: 233, x2: 233), Scanline(y: 266, x1: 233, x2: 233), Scanline(y: 265, x1: 233, x2: 233), Scanline(y: 264, x1: 232, x2: 232), Scanline(y: 263, x1: 232, x2: 232), Scanline(y: 262, x1: 231, x2: 231), Scanline(y: 261, x1: 231, x2: 231), Scanline(y: 260, x1: 231, x2: 231), Scanline(y: 259, x1: 230, x2: 230), Scanline(y: 258, x1: 230, x2: 230), Scanline(y: 257, x1: 229, x2: 229), Scanline(y: 256, x1: 229, x2: 229), Scanline(y: 255, x1: 228, x2: 228), Scanline(y: 254, x1: 228, x2: 228), Scanline(y: 253, x1: 227, x2: 227), Scanline(y: 252, x1: 227, x2: 227), Scanline(y: 251, x1: 226, x2: 226), Scanline(y: 250, x1: 225, x2: 225), Scanline(y: 249, x1: 225, x2: 225), Scanline(y: 248, x1: 224, x2: 224), Scanline(y: 247, x1: 224, x2: 224), Scanline(y: 246, x1: 223, x2: 223), Scanline(y: 245, x1: 222, x2: 222), Scanline(y: 244, x1: 222, x2: 222), Scanline(y: 243, x1: 221, x2: 221), Scanline(y: 242, x1: 220, x2: 220), Scanline(y: 241, x1: 219, x2: 219), Scanline(y: 240, x1: 219, x2: 219), Scanline(y: 239, x1: 218, x2: 218), Scanline(y: 238, x1: 217, x2: 217), Scanline(y: 237, x1: 216, x2: 216), Scanline(y: 236, x1: 215, x2: 215), Scanline(y: 235, x1: 215, x2: 215), Scanline(y: 234, x1: 214, x2: 214), Scanline(y: 233, x1: 213, x2: 213), Scanline(y: 232, x1: 212, x2: 212), Scanline(y: 231, x1: 211, x2: 211), Scanline(y: 231, x1: 210, x2: 210), Scanline(y: 230, x1: 209, x2: 209), Scanline(y: 229, x1: 208, x2: 208), Scanline(y: 228, x1: 207, x2: 207), Scanline(y: 227, x1: 206, x2: 206), Scanline(y: 226, x1: 205, x2: 205), Scanline(y: 226, x1: 204, x2: 204), Scanline(y: 225, x1: 203, x2: 203), Scanline(y: 224, x1: 202, x2: 202), Scanline(y: 223, x1: 201, x2: 201), Scanline(y: 223, x1: 200, x2: 200), Scanline(y: 222, x1: 199, x2: 199), Scanline(y: 221, x1: 198, x2: 198), Scanline(y: 221, x1: 197, x2: 197), Scanline(y: 220, x1: 196, x2: 196), Scanline(y: 219, x1: 195, x2: 195), Scanline(y: 219, x1: 194, x2: 194), Scanline(y: 218, x1: 193, x2: 193), Scanline(y: 217, x1: 192, x2: 192), Scanline(y: 217, x1: 191, x2: 191), Scanline(y: 216, x1: 190, x2: 190)
        """
        let components = samplesStr.components(separatedBy: "),")
        let last = components.last!
        var scanlinesStrs = components.dropLast().map{ $0 + ")" }
        scanlinesStrs.append(last)
        let scanlinesSample = scanlinesStrs.map(Scanline.init)
        
        XCTAssertEqual(scanlines, scanlinesSample)
    }

}
